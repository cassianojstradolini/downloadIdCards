// Package benefitsV2 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package data

// Defines values for AccumulatorType.
const (
	AccumulatorTypeAccumulator AccumulatorType = "accumulator"
)

// Defines values for AccumulatorAttributesAccumulatorType.
const (
	AccumulatorAttributesAccumulatorTypeDeductible AccumulatorAttributesAccumulatorType = "deductible"

	AccumulatorAttributesAccumulatorTypeOutOfPocketMaximum AccumulatorAttributesAccumulatorType = "out-of-pocket-maximum"

	AccumulatorAttributesAccumulatorTypeTotalOutOfPocketMaximum AccumulatorAttributesAccumulatorType = "total-out-of-pocket-maximum"
)

// Defines values for AccumulatorAttributesCategory.
const (
	AccumulatorAttributesCategoryFamily AccumulatorAttributesCategory = "family"

	AccumulatorAttributesCategoryIndividual AccumulatorAttributesCategory = "individual"
)

// Defines values for AccumulatorAttributesNetwork.
const (
	AccumulatorAttributesNetworkInNetwork AccumulatorAttributesNetwork = "in-network"

	AccumulatorAttributesNetworkNoNetwork AccumulatorAttributesNetwork = "no-network"

	AccumulatorAttributesNetworkOutOfNetwork AccumulatorAttributesNetwork = "out-of-network"
)

// Defines values for BenefitType.
const (
	BenefitTypeBenefit BenefitType = "benefit"
)

// Defines values for BenefitAttributesBenefitType.
const (
	BenefitAttributesBenefitTypeInstitutional BenefitAttributesBenefitType = "institutional"

	BenefitAttributesBenefitTypeOral BenefitAttributesBenefitType = "oral"

	BenefitAttributesBenefitTypePharmacy BenefitAttributesBenefitType = "pharmacy"

	BenefitAttributesBenefitTypeVision BenefitAttributesBenefitType = "vision"
)

// Defines values for BenefitAttributesLogoType.
const (
	BenefitAttributesLogoTypeUrl BenefitAttributesLogoType = "url"
)

// Defines values for CoverageType.
const (
	CoverageTypeCoverage CoverageType = "coverage"
)

// Defines values for CoverageAttributesNetwork.
const (
	CoverageAttributesNetworkInNetwork CoverageAttributesNetwork = "in-network"

	CoverageAttributesNetworkNoNetwork CoverageAttributesNetwork = "no-network"

	CoverageAttributesNetworkOutOfNetwork CoverageAttributesNetwork = "out-of-network"
)

// Defines values for IdCardType.
const (
	IdCardTypeIdCard IdCardType = "id-card"
)

// Defines values for IdCardAttributesBenefitType.
const (
	IdCardAttributesBenefitTypeInstitutional IdCardAttributesBenefitType = "institutional"

	IdCardAttributesBenefitTypeOral IdCardAttributesBenefitType = "oral"

	IdCardAttributesBenefitTypePharmacy IdCardAttributesBenefitType = "pharmacy"

	IdCardAttributesBenefitTypeVision IdCardAttributesBenefitType = "vision"
)

// Defines values for IdCardAttributesFace.
const (
	IdCardAttributesFaceBack IdCardAttributesFace = "back"

	IdCardAttributesFaceFront IdCardAttributesFace = "front"
)

// Defines values for IdCardAttributesType.
const (
	IdCardAttributesTypeBase64 IdCardAttributesType = "base64"

	IdCardAttributesTypeHTML IdCardAttributesType = "HTML"

	IdCardAttributesTypeUrl IdCardAttributesType = "url"
)

// Defines values for PolicyInfoType.
const (
	PolicyInfoTypePolicyInfo PolicyInfoType = "policy-info"
)

// This represents a benefit Accumulator object resource.
type Accumulator struct {
	// Benefit Accumulator attributes.
	Attributes AccumulatorAttributes `json:"attributes"`

	// Unique internal identifier for this resource.
	Id string `json:"id"`

	// The type member is used to describe resource objects that share common attributes and relationships.
	Type AccumulatorType `json:"type"`
}

// The type member is used to describe resource objects that share common attributes and relationships.
type AccumulatorType string

// Benefit Accumulator attributes.
type AccumulatorAttributes struct {
	// Accumulator type.
	AccumulatorType *AccumulatorAttributesAccumulatorType `json:"accumulatorType,omitempty"`

	// Id of the Benefit this Accumulator is associated with.
	BenefitId *string `json:"benefitId,omitempty"`

	// Accumulator Category.
	Category AccumulatorAttributesCategory `json:"category"`

	// Accumulator network.
	Network AccumulatorAttributesNetwork `json:"network"`

	// Amount already paid to the member.
	PaidAmount *struct {
		// This fields represents the money amount value in the minor units.
		Amount Amount `json:"amount"`

		// Currency code in ISO 4217 format.
		CurrencyCode CurrencyCode `json:"currencyCode"`
	} `json:"paidAmount,omitempty"`

	// Amount remaining to be used by the member.
	RemainingAmount *struct {
		// This fields represents the money amount value in the minor units.
		Amount Amount `json:"amount"`

		// Currency code in ISO 4217 format.
		CurrencyCode CurrencyCode `json:"currencyCode"`
	} `json:"remainingAmount,omitempty"`

	// Accumulator tier.
	Tier *string `json:"tier,omitempty"`

	// Total amount covered by the plan.
	TotalAmount *struct {
		// This fields represents the money amount value in the minor units.
		Amount Amount `json:"amount"`

		// Currency code in ISO 4217 format.
		CurrencyCode CurrencyCode `json:"currencyCode"`
	} `json:"totalAmount,omitempty"`
}

// Accumulator type.
type AccumulatorAttributesAccumulatorType string

// Accumulator Category.
type AccumulatorAttributesCategory string

// Accumulator network.
type AccumulatorAttributesNetwork string

// Accumulators response.
type AccumulatorsResponseSchema struct {
	// List of Accumulators.
	Data []Accumulator `json:"data"`
}

// This fields represents the money amount value in the minor units.
type Amount int

// This represents a benefit object resource.
type Benefit struct {
	// Benefit attributes.
	Attributes BenefitAttributes `json:"attributes"`

	// Benefit unique internal identifier. The id member is a unique value among resource objects that share common attributes and relationships.
	Id string `json:"id"`

	// The type member is used to describe resource objects that share common attributes and relationships.
	Type BenefitType `json:"type"`
}

// The type member is used to describe resource objects that share common attributes and relationships.
type BenefitType string

// Benefit attributes.
type BenefitAttributes struct {
	// Benefit Logo information.
	BenefitLogo *BenefitAttributesLogo `json:"benefitLogo,omitempty"`

	// Benefit type.
	BenefitType BenefitAttributesBenefitType `json:"benefitType"`

	// Benefit Category.
	Category string `json:"category"`

	// Benefit status.
	Status string `json:"status"`

	// Benefit subtitle.
	Subtitle *string `json:"subtitle,omitempty"`

	// Benefit title.
	Title *string `json:"title,omitempty"`
}

// Benefit type.
type BenefitAttributesBenefitType string

// Benefit Logo information.
type BenefitAttributesLogo struct {
	// Alt text of the image.
	AltText *string `json:"altText,omitempty"`

	// Source of the image.
	Source *string `json:"source,omitempty"`

	// Benefit Logo type.
	Type *BenefitAttributesLogoType `json:"type,omitempty"`
}

// Benefit Logo type.
type BenefitAttributesLogoType string

// Benefits response.
type BenefitsResponseSchema struct {
	// List of benefits.
	Data []Benefit `json:"data"`
}

// This represents a benefit Coverage object resource.
type Coverage struct {
	// Benefit Coverage attributes.
	Attributes CoverageAttributes `json:"attributes"`

	// Unique internal identifier for this resource.
	Id string `json:"id"`

	// The type member is used to describe resource objects that share common attributes and relationships.
	Type CoverageType `json:"type"`
}

// The type member is used to describe resource objects that share common attributes and relationships.
type CoverageType string

// Benefit Coverage attributes.
type CoverageAttributes struct {
	// Id of the Benefit this Coverage is associated with.
	BenefitId *string `json:"benefitId,omitempty"`

	// Coinsurance for this coverage.
	Coinsurance *string `json:"coinsurance,omitempty"`

	// Copayment amount for this coverage.
	CopayAmount *struct {
		// This fields represents the money amount value in the minor units.
		Amount Amount `json:"amount"`

		// Currency code in ISO 4217 format.
		CurrencyCode CurrencyCode `json:"currencyCode"`
	} `json:"copayAmount,omitempty"`

	// Description of this coverage.
	Description *string `json:"description,omitempty"`

	// Coverage network.
	Network *CoverageAttributesNetwork `json:"network,omitempty"`

	// Service name.
	ServiceName string `json:"serviceName"`

	// Coverage tier.
	Tier *string `json:"tier,omitempty"`
}

// Coverage network.
type CoverageAttributesNetwork string

// Coverages response.
type CoveragesResponseSchema struct {
	// List of Costs and Coverages.
	Data []Coverage `json:"data"`
}

// Currency code in ISO 4217 format.
type CurrencyCode string

// This represents an Id Card object resource.
type IdCard struct {
	// Id Card attributes.
	Attributes IdCardAttributes `json:"attributes"`

	// Unique internal identifier for this resource.
	Id string `json:"id"`

	// The type member is used to describe resource objects that share common attributes and relationships.
	Type IdCardType `json:"type"`
}

// The type member is used to describe resource objects that share common attributes and relationships.
type IdCardType string

// Id Card attributes.
type IdCardAttributes struct {
	// Alternative accessible text describing the image's content and information.
	AltText string `json:"altText"`

	// Id of the Benefit this Id Card is associated with.
	BenefitId *string `json:"benefitId,omitempty"`

	// Benefit type associated with this Id Card.
	BenefitType *IdCardAttributesBenefitType `json:"benefitType,omitempty"`

	// Face of this Id Card image resource.
	Face IdCardAttributesFace `json:"face"`

	// The image source for this Id Card.
	Source string `json:"source"`

	// The image type associated with this Id Card.
	Type IdCardAttributesType `json:"type"`
}

// Benefit type associated with this Id Card.
type IdCardAttributesBenefitType string

// Face of this Id Card image resource.
type IdCardAttributesFace string

// The image type associated with this Id Card.
type IdCardAttributesType string

// Id Cards response.
type IdCardsResponseSchema struct {
	// List of Id Cards.
	Data []IdCard `json:"data"`
}

// Reusable model to provide a list of dynamic values by a key value pair.
type LabelValuePairDefinition struct {
	// The label of the map
	Label *string `json:"label,omitempty"`

	// The value of the map.
	String *string `json:"string,omitempty"`
}

// This represents a benefit Policy Info object resource.
type PolicyInfo struct {
	// Policy Info attributes.
	Attributes PolicyInfoAttributes `json:"attributes"`

	// Unique internal identifier for this resource.
	Id string `json:"id"`

	// The type member is used to describe resource objects that share common attributes and relationships.
	Type PolicyInfoType `json:"type"`
}

// The type member is used to describe resource objects that share common attributes and relationships.
type PolicyInfoType string

// Policy Info attributes.
type PolicyInfoAttributes struct {
	// Id of the Benefit this policy info is associated with.
	BenefitId *string `json:"benefitId,omitempty"`

	// Reusable model to provide a list of dynamic values by a key value pair.
	PolicyInfo *LabelValuePairDefinition `json:"policyInfo,omitempty"`
}

// Policy Info response.
type PolicyInfoResponseSchema struct {
	// List of Policy Info.
	Data []PolicyInfo `json:"data"`
}

// BenefitId defines model for benefitId.
type BenefitId string

// UserId defines model for userId.
type UserId string

// GetAccumulatorsParams defines parameters for GetAccumulators.
type GetAccumulatorsParams struct {
	// Get benefits for this delegated userId.
	UserId *UserId `json:"userId,omitempty"`

	// Get resources for this benefitId.
	BenefitId *BenefitId `json:"benefitId,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XUserAccessToken *XUserAccessToken `json:"X-User-Access-Token,omitempty"`

	// The customer-specific identifier (generally the customer user id) that may be necessary to identify a unique user on remote customer-managed APIs.
	XUserId *XUserId `json:"X-User-Id,omitempty"`

	// An identity token issued by a customer authorization server, containing the user's identity information, such as their user id and user profile data in the customer servers.
	XUserIdentityToken *XUserIdentityToken `json:"X-User-Identity-Token,omitempty"`

	// A long-lived access token issued by a customer-controlled authorization server scoped to an API-specific token sometimes required for the backend extension to call a remote customer API.
	XApiAccessToken *XApiAccessToken `json:"X-Api-Access-Token,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider or League scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XLeagueAuth *XLeagueAuth `json:"X-League-Auth,omitempty"`
}

// GetBenefitsParams defines parameters for GetBenefits.
type GetBenefitsParams struct {
	// Get benefits for this delegated userId.
	UserId *UserId `json:"userId,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XUserAccessToken *XUserAccessToken `json:"X-User-Access-Token,omitempty"`

	// The customer-specific identifier (generally the customer user id) that may be necessary to identify a unique user on remote customer-managed APIs.
	XUserId *XUserId `json:"X-User-Id,omitempty"`

	// An identity token issued by a customer authorization server, containing the user's identity information, such as their user id and user profile data in the customer servers.
	XUserIdentityToken *XUserIdentityToken `json:"X-User-Identity-Token,omitempty"`

	// A long-lived access token issued by a customer-controlled authorization server scoped to an API-specific token sometimes required for the backend extension to call a remote customer API.
	XApiAccessToken *XApiAccessToken `json:"X-Api-Access-Token,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider or League scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XLeagueAuth *XLeagueAuth `json:"X-League-Auth,omitempty"`
}

// GetCoveragesParams defines parameters for GetCoverages.
type GetCoveragesParams struct {
	// Get benefits for this delegated userId.
	UserId *UserId `json:"userId,omitempty"`

	// Get resources for this benefitId.
	BenefitId *BenefitId `json:"benefitId,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XUserAccessToken *XUserAccessToken `json:"X-User-Access-Token,omitempty"`

	// The customer-specific identifier (generally the customer user id) that may be necessary to identify a unique user on remote customer-managed APIs.
	XUserId *XUserId `json:"X-User-Id,omitempty"`

	// An identity token issued by a customer authorization server, containing the user's identity information, such as their user id and user profile data in the customer servers.
	XUserIdentityToken *XUserIdentityToken `json:"X-User-Identity-Token,omitempty"`

	// A long-lived access token issued by a customer-controlled authorization server scoped to an API-specific token sometimes required for the backend extension to call a remote customer API.
	XApiAccessToken *XApiAccessToken `json:"X-Api-Access-Token,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider or League scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XLeagueAuth *XLeagueAuth `json:"X-League-Auth,omitempty"`
}

// GetIdCardsParams defines parameters for GetIdCards.
type GetIdCardsParams struct {
	// Get benefits for this delegated userId.
	UserId *UserId `json:"userId,omitempty"`

	// Get resources for this benefitId.
	BenefitId *BenefitId `json:"benefitId,omitempty"`

	// Get resources for this benefitType.
	BenefitType *BenefitType `json:"benefitType,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XUserAccessToken *XUserAccessToken `json:"X-User-Access-Token,omitempty"`

	// The customer-specific identifier (generally the customer user id) that may be necessary to identify a unique user on remote customer-managed APIs.
	XUserId *XUserId `json:"X-User-Id,omitempty"`

	// An identity token issued by a customer authorization server, containing the user's identity information, such as their user id and user profile data in the customer servers.
	XUserIdentityToken *XUserIdentityToken `json:"X-User-Identity-Token,omitempty"`

	// A long-lived access token issued by a customer-controlled authorization server scoped to an API-specific token sometimes required for the backend extension to call a remote customer API.
	XApiAccessToken *XApiAccessToken `json:"X-Api-Access-Token,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider or League scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XLeagueAuth *XLeagueAuth `json:"X-League-Auth,omitempty"`
}

// GetPolicyInformationParams defines parameters for GetPolicyInformation.
type GetPolicyInformationParams struct {
	// Get benefits for this delegated userId.
	UserId *UserId `json:"userId,omitempty"`

	// Get resources for this benefitId.
	BenefitId *BenefitId `json:"benefitId,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XUserAccessToken *XUserAccessToken `json:"X-User-Access-Token,omitempty"`

	// The customer-specific identifier (generally the customer user id) that may be necessary to identify a unique user on remote customer-managed APIs.
	XUserId *XUserId `json:"X-User-Id,omitempty"`

	// An identity token issued by a customer authorization server, containing the user's identity information, such as their user id and user profile data in the customer servers.
	XUserIdentityToken *XUserIdentityToken `json:"X-User-Identity-Token,omitempty"`

	// A long-lived access token issued by a customer-controlled authorization server scoped to an API-specific token sometimes required for the backend extension to call a remote customer API.
	XApiAccessToken *XApiAccessToken `json:"X-Api-Access-Token,omitempty"`

	// A short-lived access token issued by a customer's Identity Provider or League scoped to an individual user that will authorize the backend extension to act on behalf of a given user.
	XLeagueAuth *XLeagueAuth `json:"X-League-Auth,omitempty"`
}
